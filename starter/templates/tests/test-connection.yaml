apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "helper.fullname" . }}-test-connection"
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": test
    {{- if .Values.commonAnnotations }}
    {{- include "helper.annotations" (dict "annotations" .Values.commonAnnotations "context" $) | trim | nindent 4 }}
    {{- end }}
    {{- if .Values.podAnnotations }}
    {{- include "helper.annotations" (dict "annotations" .Values.podAnnotations "context" $) | trim | nindent 4 }}
    {{- end }}
  labels:
    component: "test-connection"
    {{- include "helper.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "helper.tplValue" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.podLabels }}
    {{- include "helper.tplValue" (dict "value" .Values.podLabels "context" $) | nindent 4 }}
    {{- end }}
spec:
  containers:
    - name: curl
      image: "{{ include "helper.image" . }}"
      imagePullPolicy: "{{ include "helper.imagePullPolicy" . }}"
      command: ["/bin/sh"]
      args:
        - -c
      {{- $endpoint := include "helper.fullname" . -}}
      {{- range .Values.containerPorts }}
        - curl http://{{ $endpoint }}:{{ .containerPort }};
      {{- end }}
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.extraEnvs }}
        {{- toYaml .Values.extraEnvs | nindent 8 }}
        {{- end }}
      {{- if .Values.resources }}
      resources: {{- toYaml .Values.resources | nindent 8 }}
      {{- end }}
      {{- if .Values.lifecycle }}
      lifecycle: {{- toYaml .Values.lifecycle | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
{{- include "helper.imagePullSecrets" . | nindent 2 }}
  restartPolicy: Never
  dnsPolicy: {{ .Values.dnsPolicy }}
  hostNetwork: {{ .Values.hostNetwork }}
  {{- if .Values.priorityClassName }}
  priorityClassName: {{ .Values.priorityClassName | quote }}
  {{- end }}
  {{- if .Values.podSecurityContext }}
  securityContext: {{- toYaml .Values.podSecurityContext | nindent 4 }}
  {{- end }}
  {{- if .Values.affinity }}
  affinity: {{- include "helper.tplValue" (dict "value" .Values.affinity "context" $) | nindent 8 }}
  {{- end }}
  {{- if .Values.nodeSelector }}
  nodeSelector: {{- include "helper.tplValue" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
  {{- end }}
  {{- if .Values.tolerations }}
  tolerations: {{- include "helper.tplValue" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
  {{- end }}
  {{- if .Values.topologySpreadConstraints }}
  topologySpreadConstraints: {{ toYaml .Values.topologySpreadConstraints | nindent 8 }}
  {{- end }}
  serviceAccountName: {{ template "helper.serviceAccountName" . }}
  terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
