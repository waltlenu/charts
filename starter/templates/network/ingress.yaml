{{- if .Values.ingress.create }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ default (include "helper.fullname" .) .Values.ingress.name }}
  namespace: {{ .Release.Namespace }}
  {{- if or .Values.ingress.annotations .Values.commonAnnotations .Values.ingress.certManager }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "helper.annotations" (dict "annotations" .Values.commonAnnotations "context" $) | trim | nindent 4 }}
    {{- end }}
    {{- if .Values.ingress.annotations }}
    {{- include "helper.annotations" (dict "annotations" .Values.ingress.annotations "context" $) | trim | nindent 4 }}
    {{- end }}
  {{- end }}
  labels: {{- include "helper.labels" . | nindent 4 }}
    {{- if .Values.ingress.labels }}
    {{- include "helper.tplValue" (dict "value" .Values.ingress.labels "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonLabels }}
    {{- include "helper.tplValue" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
spec:
  rules:
    {{- if .Values.ingress.hostname }}
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          - path: {{ default "/" .Values.ingress.path }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            backend:
              service:
                name: {{ default (include "helper.fullname" .) .Values.service.name }}
                port:
                  number: {{ get (first .Values.service.ports) "port" }}
    {{- end }}
    {{- range .Values.ingress.extraHosts }}
    - host: {{ .name }}
      http:
        paths:
          - path: {{ default "/" .path }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            backend:
                name: {{ .serviceName }}
                port:
                  number: {{ .servicePort }}
    {{- end }}
  {{- if or .Values.ingress.tls .Values.ingress.extraTls }}
  tls:
    {{- if .Values.ingress.tls }}
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
    {{- end }}
    {{- if .Values.ingress.extraTls }}
    {{- include "helper.tplValue" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}